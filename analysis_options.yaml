include: package:flutter_lints/flutter.yaml

linter:
  rules:
    # Error rules
    always_use_package_imports: true
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    avoid_returning_null_for_future: true
    avoid_type_to_string: true
    empty_statements: true
    no_duplicate_case_values: true
    valid_regexps: true

    # Style rules
    always_declare_return_types: true
    annotate_overrides: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_single_cascade_in_expression_statements: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    empty_catches: true
    empty_constructor_bodies: true
    library_names: true
    library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    null_closures: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_final_fields: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_generic_function_type_aliases: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_iterable_whereType: true
    prefer_single_quotes: true
    prefer_spread_collections: true
    recursive_getters: true
    unnecessary_const: true
    unnecessary_new: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_this: true
    use_function_type_syntax_for_parameters: true
    use_rethrow_when_possible: true

# Additional analyzer options
analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  errors:
    # Treat missing required parameters as an error
    missing_required_param: error
    # Treat missing returns as an error
    missing_return: error
    # Treat todo comments as a warning
    todo: warning
